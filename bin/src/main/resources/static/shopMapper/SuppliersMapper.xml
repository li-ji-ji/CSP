<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yzj.shop.mapper.SuppliersMapper" >
  <resultMap id="BaseResultMap" type="cn.yzj.shop.po.Suppliers" >
    <id column="suppliers_id" property="suppliersId" jdbcType="SMALLINT" />
    <result column="suppliers_name" property="suppliersName" jdbcType="VARCHAR" />
    <result column="is_check" property="isCheck" jdbcType="BIT" />
    <result column="suppliers_contacts" property="suppliersContacts" jdbcType="VARCHAR" />
    <result column="suppliers_phone" property="suppliersPhone" jdbcType="VARCHAR" />
    <result column="province_id" property="provinceId" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.yzj.shop.po.Suppliers" extends="BaseResultMap" >
    <result column="suppliers_desc" property="suppliersDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    suppliers_id, suppliers_name, is_check, suppliers_contacts, suppliers_phone, province_id, 
    city_id
  </sql>
  <sql id="Blob_Column_List" >
    suppliers_desc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.yzj.shop.po.SuppliersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yzj.shop.po.SuppliersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from suppliers
    where suppliers_id = #{suppliersId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from suppliers
    where suppliers_id = #{suppliersId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yzj.shop.po.SuppliersExample" >
    delete from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yzj.shop.po.Suppliers" >
    insert into suppliers (suppliers_id, suppliers_name, is_check, 
      suppliers_contacts, suppliers_phone, province_id, 
      city_id, suppliers_desc)
    values (#{suppliersId,jdbcType=SMALLINT}, #{suppliersName,jdbcType=VARCHAR}, #{isCheck,jdbcType=BIT}, 
      #{suppliersContacts,jdbcType=VARCHAR}, #{suppliersPhone,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, 
      #{cityId,jdbcType=INTEGER}, #{suppliersDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yzj.shop.po.Suppliers" >
    insert into suppliers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="suppliersId != null" >
        suppliers_id,
      </if>
      <if test="suppliersName != null" >
        suppliers_name,
      </if>
      <if test="isCheck != null" >
        is_check,
      </if>
      <if test="suppliersContacts != null" >
        suppliers_contacts,
      </if>
      <if test="suppliersPhone != null" >
        suppliers_phone,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="suppliersDesc != null" >
        suppliers_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="suppliersId != null" >
        #{suppliersId,jdbcType=SMALLINT},
      </if>
      <if test="suppliersName != null" >
        #{suppliersName,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null" >
        #{isCheck,jdbcType=BIT},
      </if>
      <if test="suppliersContacts != null" >
        #{suppliersContacts,jdbcType=VARCHAR},
      </if>
      <if test="suppliersPhone != null" >
        #{suppliersPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="suppliersDesc != null" >
        #{suppliersDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yzj.shop.po.SuppliersExample" resultType="java.lang.Integer" >
    select count(*) from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update suppliers
    <set >
      <if test="record.suppliersId != null" >
        suppliers_id = #{record.suppliersId,jdbcType=SMALLINT},
      </if>
      <if test="record.suppliersName != null" >
        suppliers_name = #{record.suppliersName,jdbcType=VARCHAR},
      </if>
      <if test="record.isCheck != null" >
        is_check = #{record.isCheck,jdbcType=BIT},
      </if>
      <if test="record.suppliersContacts != null" >
        suppliers_contacts = #{record.suppliersContacts,jdbcType=VARCHAR},
      </if>
      <if test="record.suppliersPhone != null" >
        suppliers_phone = #{record.suppliersPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.suppliersDesc != null" >
        suppliers_desc = #{record.suppliersDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update suppliers
    set suppliers_id = #{record.suppliersId,jdbcType=SMALLINT},
      suppliers_name = #{record.suppliersName,jdbcType=VARCHAR},
      is_check = #{record.isCheck,jdbcType=BIT},
      suppliers_contacts = #{record.suppliersContacts,jdbcType=VARCHAR},
      suppliers_phone = #{record.suppliersPhone,jdbcType=VARCHAR},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      suppliers_desc = #{record.suppliersDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update suppliers
    set suppliers_id = #{record.suppliersId,jdbcType=SMALLINT},
      suppliers_name = #{record.suppliersName,jdbcType=VARCHAR},
      is_check = #{record.isCheck,jdbcType=BIT},
      suppliers_contacts = #{record.suppliersContacts,jdbcType=VARCHAR},
      suppliers_phone = #{record.suppliersPhone,jdbcType=VARCHAR},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yzj.shop.po.Suppliers" >
    update suppliers
    <set >
      <if test="suppliersName != null" >
        suppliers_name = #{suppliersName,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null" >
        is_check = #{isCheck,jdbcType=BIT},
      </if>
      <if test="suppliersContacts != null" >
        suppliers_contacts = #{suppliersContacts,jdbcType=VARCHAR},
      </if>
      <if test="suppliersPhone != null" >
        suppliers_phone = #{suppliersPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="suppliersDesc != null" >
        suppliers_desc = #{suppliersDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where suppliers_id = #{suppliersId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yzj.shop.po.Suppliers" >
    update suppliers
    set suppliers_name = #{suppliersName,jdbcType=VARCHAR},
      is_check = #{isCheck,jdbcType=BIT},
      suppliers_contacts = #{suppliersContacts,jdbcType=VARCHAR},
      suppliers_phone = #{suppliersPhone,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      suppliers_desc = #{suppliersDesc,jdbcType=LONGVARCHAR}
    where suppliers_id = #{suppliersId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yzj.shop.po.Suppliers" >
    update suppliers
    set suppliers_name = #{suppliersName,jdbcType=VARCHAR},
      is_check = #{isCheck,jdbcType=BIT},
      suppliers_contacts = #{suppliersContacts,jdbcType=VARCHAR},
      suppliers_phone = #{suppliersPhone,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER}
    where suppliers_id = #{suppliersId,jdbcType=SMALLINT}
  </update>
</mapper>
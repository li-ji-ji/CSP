<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yzj.shop.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="cn.yzj.shop.po.Message" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="SMALLINT" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="category" property="category" jdbcType="BIT" />
    <result column="send_time" property="sendTime" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.yzj.shop.po.MessageWithBLOBs" extends="BaseResultMap" >
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    message_id, admin_id, type, category, send_time
  </sql>
  <sql id="Blob_Column_List" >
    message, data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.yzj.shop.po.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yzj.shop.po.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yzj.shop.po.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yzj.shop.po.MessageWithBLOBs" >
    insert into message (message_id, admin_id, type, 
      category, send_time, message, 
      data)
    values (#{messageId,jdbcType=INTEGER}, #{adminId,jdbcType=SMALLINT}, #{type,jdbcType=BIT}, 
      #{category,jdbcType=BIT}, #{sendTime,jdbcType=INTEGER}, #{message,jdbcType=LONGVARCHAR}, 
      #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yzj.shop.po.MessageWithBLOBs" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=SMALLINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="category != null" >
        #{category,jdbcType=BIT},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yzj.shop.po.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.messageId != null" >
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=SMALLINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=BIT},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=INTEGER},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=BIT},
      category = #{record.category,jdbcType=BIT},
      send_time = #{record.sendTime,jdbcType=INTEGER},
      message = #{record.message,jdbcType=LONGVARCHAR},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=SMALLINT},
      type = #{record.type,jdbcType=BIT},
      category = #{record.category,jdbcType=BIT},
      send_time = #{record.sendTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yzj.shop.po.MessageWithBLOBs" >
    update message
    <set >
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=SMALLINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=BIT},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yzj.shop.po.MessageWithBLOBs" >
    update message
    set admin_id = #{adminId,jdbcType=SMALLINT},
      type = #{type,jdbcType=BIT},
      category = #{category,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR},
      data = #{data,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yzj.shop.po.Message" >
    update message
    set admin_id = #{adminId,jdbcType=SMALLINT},
      type = #{type,jdbcType=BIT},
      category = #{category,jdbcType=BIT},
      send_time = #{sendTime,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>
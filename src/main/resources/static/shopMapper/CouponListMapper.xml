<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yzj.shop.mapper.CouponListMapper" >
  <resultMap id="BaseResultMap" type="cn.yzj.shop.po.CouponList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="get_order_id" property="getOrderId" jdbcType="INTEGER" />
    <result column="use_time" property="useTime" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cid, type, uid, order_id, get_order_id, use_time, code, send_time, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yzj.shop.po.CouponListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from coupon_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coupon_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yzj.shop.po.CouponListExample" >
    delete from coupon_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yzj.shop.po.CouponList" >
    insert into coupon_list (id, cid, type, uid, 
      order_id, get_order_id, use_time, 
      code, send_time, status)
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{type,jdbcType=BIT}, #{uid,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{getOrderId,jdbcType=INTEGER}, #{useTime,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{sendTime,jdbcType=INTEGER}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="cn.yzj.shop.po.CouponList" >
    insert into coupon_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="getOrderId != null" >
        get_order_id,
      </if>
      <if test="useTime != null" >
        use_time,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="getOrderId != null" >
        #{getOrderId,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yzj.shop.po.CouponListExample" resultType="java.lang.Integer" >
    select count(*) from coupon_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coupon_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.getOrderId != null" >
        get_order_id = #{record.getOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.useTime != null" >
        use_time = #{record.useTime,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coupon_list
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=BIT},
      uid = #{record.uid,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      get_order_id = #{record.getOrderId,jdbcType=INTEGER},
      use_time = #{record.useTime,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      send_time = #{record.sendTime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yzj.shop.po.CouponList" >
    update coupon_list
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="getOrderId != null" >
        get_order_id = #{getOrderId,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        use_time = #{useTime,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yzj.shop.po.CouponList" >
    update coupon_list
    set cid = #{cid,jdbcType=INTEGER},
      type = #{type,jdbcType=BIT},
      uid = #{uid,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      get_order_id = #{getOrderId,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
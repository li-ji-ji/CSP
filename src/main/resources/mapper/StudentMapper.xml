<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cfz.csp.authority.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.cfz.csp.authority.po.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dormitory_add" jdbcType="VARCHAR" property="dormitoryAdd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="familly_add" jdbcType="VARCHAR" property="famillyAdd" />
    <result column="wxopenid" jdbcType="VARCHAR" property="wxopenid" />
    <result column="hurl" jdbcType="VARCHAR" property="hurl" />
    <result column="wxname" jdbcType="VARCHAR" property="wxname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>
  
  <!-- 用户、角色多对多 -->
	<resultMap type="com.cfz.csp.authority.po.Student"
		id="studentRoleMap" extends="BaseResultMap">
		<collection property="roleList"
			ofType="com.cfz.csp.authority.po.SysRole">
			<id column="id" property="id" />
			<result column="available" property="available" />
			<result column="description" property="description" />
			<result column="role" property="role" />
			<!-- 角色、权限多对多链接 -->
			<!-- <collection property="permissions" javaType="List"
				ofType="com.cfz.csp.authority.po.SysPermission">
				<id column="id" property="id" />
				<result column="available" property="available" />
				<result column="name" property="name" />
				<result column="parent_id" property="parentId" />
				<result column="parent_ids" property="parentIds" />
				<result column="permission" property="permission" />
				<result column="resource_type" property="resourceType" />
				<result column="url" property="url" />
			</collection> -->
		</collection>
	</resultMap>
	<!-- 根据student表中的id查询用户和角色信息 -->
	<sql id="Student_Role_Permission_Column_List">
		s.sn, s.wxname, s.password, s.salt, s.state, s.name,
		r.id,
		r.available, r.description, r.role, p.id, p.available, p.name,
		p.parent_ids, p.permission, p.resource_type, p.url
	</sql>
	<select id="selectStudentRolePermissionByName"
		parameterType="java.lang.String" resultMap="studentRoleMap">
		select
		<include refid="Student_Role_Permission_Column_List" />
		from student s
		join sys_student_role sr on s.sn=sr.sn
		join sys_role r
		on
		sr.role_id=r.id
		join sys_role_permission rp on r.id=rp.role_id
		join
		sys_permission p on rp.permission_id=p.id
		where s.name =
		#{name}
	</select>
  
  
  <!-- 批量插入 -->
  <insert id="insertStudentInfoBatch" parameterType="java.util.List">
		insert into student (sn, name, dormitory_add,
		phone, email, college, classes,grade, major,familly_add)
		
		values 
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.sn,jdbcType=VARCHAR}, 
		#{item.name,jdbcType=VARCHAR},
		#{item.dormitoryAdd,jdbcType=VARCHAR},
		#{item.phone,jdbcType=VARCHAR}, 
		#{item.email,jdbcType=VARCHAR}, 
		#{item.college,jdbcType=VARCHAR},
		#{item.classes,jdbcType=VARCHAR},
		#{item.grade,jdbcType=VARCHAR}, 
		#{item.major,jdbcType=VARCHAR}, 
		#{item.famillyAdd,jdbcType=VARCHAR})
		</foreach>
	</insert>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sn, name, dormitory_add, phone, email, college, classes, grade, major, familly_add, 
    wxopenid, hurl, wxname, sex, school, password, salt, state
  </sql>
  <select id="selectByExample" parameterType="com.cfz.csp.authority.po.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cfz.csp.authority.po.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cfz.csp.authority.po.Student">
    insert into student (id, sn, name, 
      dormitory_add, phone, email, 
      college, classes, grade, 
      major, familly_add, wxopenid, 
      hurl, wxname, sex, 
      school, password, salt, 
      state)
    values (#{id,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{dormitoryAdd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{college,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{famillyAdd,jdbcType=VARCHAR}, #{wxopenid,jdbcType=VARCHAR}, 
      #{hurl,jdbcType=VARCHAR}, #{wxname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cfz.csp.authority.po.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dormitoryAdd != null">
        dormitory_add,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="famillyAdd != null">
        familly_add,
      </if>
      <if test="wxopenid != null">
        wxopenid,
      </if>
      <if test="hurl != null">
        hurl,
      </if>
      <if test="wxname != null">
        wxname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryAdd != null">
        #{dormitoryAdd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="famillyAdd != null">
        #{famillyAdd,jdbcType=VARCHAR},
      </if>
      <if test="wxopenid != null">
        #{wxopenid,jdbcType=VARCHAR},
      </if>
      <if test="hurl != null">
        #{hurl,jdbcType=VARCHAR},
      </if>
      <if test="wxname != null">
        #{wxname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cfz.csp.authority.po.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dormitoryAdd != null">
        dormitory_add = #{record.dormitoryAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.famillyAdd != null">
        familly_add = #{record.famillyAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.wxopenid != null">
        wxopenid = #{record.wxopenid,jdbcType=VARCHAR},
      </if>
      <if test="record.hurl != null">
        hurl = #{record.hurl,jdbcType=VARCHAR},
      </if>
      <if test="record.wxname != null">
        wxname = #{record.wxname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      dormitory_add = #{record.dormitoryAdd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      familly_add = #{record.famillyAdd,jdbcType=VARCHAR},
      wxopenid = #{record.wxopenid,jdbcType=VARCHAR},
      hurl = #{record.hurl,jdbcType=VARCHAR},
      wxname = #{record.wxname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cfz.csp.authority.po.Student">
    update student
    <set>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dormitoryAdd != null">
        dormitory_add = #{dormitoryAdd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="famillyAdd != null">
        familly_add = #{famillyAdd,jdbcType=VARCHAR},
      </if>
      <if test="wxopenid != null">
        wxopenid = #{wxopenid,jdbcType=VARCHAR},
      </if>
      <if test="hurl != null">
        hurl = #{hurl,jdbcType=VARCHAR},
      </if>
      <if test="wxname != null">
        wxname = #{wxname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cfz.csp.authority.po.Student">
    update student
    set sn = #{sn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      dormitory_add = #{dormitoryAdd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      familly_add = #{famillyAdd,jdbcType=VARCHAR},
      wxopenid = #{wxopenid,jdbcType=VARCHAR},
      hurl = #{hurl,jdbcType=VARCHAR},
      wxname = #{wxname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>